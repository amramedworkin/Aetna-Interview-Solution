@startuml 09c_Combined_Physical_Deployment_Diagram
!theme mars

skinparam HeaderFontSize 20
skinparam HeaderFontColor #00008B
header Aetna Interview Project

skinparam titleFontSize 30
title 09c_Combined_Physical_Deployment_Diagram

' Make the legend/table lighter
skinparam LegendBackgroundColor #F2F2F2  ' light gray
skinparam LegendBorderColor #CCCCCC    ' subtle border

skinparam cloudFontColor #000000
skinparam rectangle {
  BackgroundColor<<aws>> #f7faff
  BorderColor<<aws>> #0096d6
}
skinparam node {
  BackgroundColor<<local>> #e0f2f7
  BorderColor<<local>> #00acc1
}

actor "① External User" as User
actor "② DevOps Engineer" as DevOps
actor "③ Team Lead" as TL
actor "④ Security Officer" as SecOff
actor "⑤ Developer" as Developer

cloud "⑥ AWS Cloud" <<aws>> {
  node "⑦ VPC (Prod)" <<aws>> {
    rectangle "⑧ Public Subnet (Prod)" as PublicSubnetProd {
      [⑨ API Gateway (Prod)] <<aws>>
    }
    rectangle "⑩ Private Subnet (Prod)" as PrivateSubnetProd {
      [⑪ ECS Fargate - Movie API (Prod)] <<aws>>
      [⑫ Amazon RDS - PostgreSQL (Prod)] <<aws>>
    }
    rectangle "⑬ Shared Services (Prod)" as SharedServicesProd {
      [⑭ Amazon Cognito (Prod)] <<aws>>
      [⑮ AWS Secrets Manager (Prod)] <<aws>>
      [⑯ AWS Systems Manager (SSM) (Prod)] <<aws>>
      [⑰ Amazon CloudWatch (Prod)] <<aws>>
      [⑱ Amazon SNS (Alerts)] <<aws>>
    }
    node "⑲ Amazon ECR" <<aws>> {
      [⑳ ECR Repository (Movie API)] <<aws>>
    }
  }
  node "㉑ VPC (Dev)" <<aws>> {
    rectangle "㉒ Public Subnet (Dev)" as PublicSubnetDev {
      [㉘ API Gateway (Dev)] <<aws>>
    }
    rectangle "㉓ Private Subnet (Dev)" as PrivateSubnetDev {
      [㉙ ECS Fargate - Movie API (Dev)] <<aws>>
      [㉚ Amazon RDS (Dev)] <<aws>>
    }
    rectangle "㉜ Shared Services (Dev)" as SharedServicesDev {
      [㉛ Amazon Cognito (Dev Pool)] <<aws>>
      [㉝ AWS Secrets Manager (Dev)] <<aws>>
      [㉞ AWS Systems Manager (SSM) (Dev)] <<aws>>
      [㉟ AWS CloudWatch (Dev Logs)] <<aws>>
    }
  }
  node "㉞ Amazon Workspaces" <<aws>> {
    rectangle "㊱ Workspace Instance" <<aws>> {
      node "㊲ Local Development" <<local>> {
        database "㊳ SQLite (Local)" <<local>>
        [㊴ Docker Engine] <<local>>
        component "㊵ Movie API (Local Docker)" <<local>>
      }
    }
  }
  cloud "㊶ GitHub" <<external>>
  cloud "㊷ GitHub Actions" <<external>>
}

' --- Production Flows ---
User --> [⑨ API Gateway (Prod)] : HTTPS Request
[⑨ API Gateway (Prod)] --> [⑪ ECS Fargate - Movie API (Prod)] : API Call Routing
[⑪ ECS Fargate - Movie API (Prod)] --> [⑫ Amazon RDS - PostgreSQL (Prod)] : Secure JDBC
[⑪ ECS Fargate - Movie API (Prod)] --> [⑭ Amazon Cognito (Prod)] : Token Verification
[⑪ ECS Fargate - Movie API (Prod)] --> [⑮ AWS Secrets Manager (Prod)] : Retrieve Secrets
[⑪ ECS Fargate - Movie API (Prod)] --> [⑯ AWS Systems Manager (SSM) (Prod)] : Config Parameters
[⑪ ECS Fargate - Movie API (Prod)] --> [⑰ Amazon CloudWatch (Prod)] : Logs, Metrics
[⑰ Amazon CloudWatch (Prod)] --> [⑱ Amazon SNS (Alerts)] : Alerts
[⑱ Amazon SNS (Alerts)] --> DevOps : Notify (Prod)
[⑱ Amazon SNS (Alerts)] --> TL : Notify (Prod)
[⑱ Amazon SNS (Alerts)] --> SecOff : Notify (Prod)

' --- Development Flows ---
Developer --> [㊱ Workspace Instance] : Connect
[㊱ Workspace Instance] --> [㊳ SQLite (Local)] : Access
[㊱ Workspace Instance] --> [㊴ Docker Engine] : Run Container
[㊴ Docker Engine] --> [㊵ Movie API (Local Docker)] : Run App
[㊱ Workspace Instance] --> [㉚ Amazon RDS (Dev)] : JDBC
[㊱ Workspace Instance] --> [㉛ Amazon Cognito (Dev Pool)] : Auth Test
[㊱ Workspace Instance] --> [㉝ AWS Secrets Manager (Dev)] : Fetch Secrets
[㊱ Workspace Instance] --> [㉞ AWS Systems Manager (SSM) (Dev)] : Fetch Config
[㊱ Workspace Instance] --> [㉘ API Gateway (Dev)] : Test API
[㊱ Workspace Instance] --> [㊶ GitHub] : Push Code
[㊶ GitHub] --> [㊷ GitHub Actions] : Trigger CI
[㊷ GitHub Actions] --> [⑳ ECR Repository (Movie API)] : Push Docker Image
[㊷ GitHub Actions] --> [㉘ API Gateway (Dev)] : Update/Configure
[㊷ GitHub Actions] --> [㉙ ECS Fargate - Movie API (Dev)] : Deploy New Version
[㊷ GitHub Actions] --> [㉚ Amazon RDS (Dev)] : Schema Migrations (if any)
[㉘ API Gateway (Dev)] --> [㉙ ECS Fargate - Movie API (Dev)] : API Call Routing
[㉙ ECS Fargate - Movie API (Dev)] --> [㉚ Amazon RDS (Dev)] : Secure JDBC
[㉙ ECS Fargate - Movie API (Dev)] --> [㉛ Amazon Cognito (Dev Pool)] : Token Verification
[㉙ ECS Fargate - Movie API (Dev)] --> [㉝ AWS Secrets Manager (Dev)] : Retrieve Secrets
[㉙ ECS Fargate - Movie API (Dev)] --> [㉞ AWS Systems Manager (SSM) (Dev)] : Config Parameters
[㉙ ECS Fargate - Movie API (Dev)] --> [㉟ AWS CloudWatch (Dev Logs)] : Logs, Metrics

legend bottom
|= Step |= Component |= Description |= Category |
| ①  | External User                   | End user of the Production API | User                 |
| ②  | DevOps Engineer                 | Manages infrastructure and operations | Team Member          |
| ③  | Team Lead                       | Leads the development team | Team Member          |
| ④  | Security Officer                | Oversees security aspects | Team Member          |
| ⑤  | Developer                       | Software Engineer working on the API | Team Member          |
| ⑥  | AWS Cloud                       | The overarching Amazon Web Services environment | Cloud Environment    |
| ⑦  | VPC (Prod)                      | Virtual Private Cloud for the Production environment | Networking           |
| ⑧  | Public Subnet (Prod)            | Publicly accessible subnet within the Prod VPC | Networking           |
| ⑨  | API Gateway (Prod)              | Entry point for the Production API | API Management       |
| ⑩  | Private Subnet (Prod)           | Privately accessible subnet within the Prod VPC | Networking           |
| ⑪  | ECS Fargate - Movie API (Prod)  | Stateless compute containers for the Prod API | Compute              |
| ⑫  | Amazon RDS - PostgreSQL (Prod) | PostgreSQL database for Production | Database             |
| ⑬  | Shared Services (Prod)          | Subnet for shared production services | Networking           |
| ⑭  | Amazon Cognito (Prod)           | Identity provider for the Production API | Identity & Security  |
| ⑮  | AWS Secrets Manager (Prod)      | Secure storage for Production secrets | Security             |
| ⑯  | AWS Systems Manager (SSM) (Prod)| Parameter store for Production configuration | Management           |
| ⑰  | Amazon CloudWatch (Prod)        | Logging and monitoring for Production | Observability        |
| ⑱  | Amazon SNS (Alerts)             | Push notifications for production alerts | Notification         |
| ⑲  | Amazon ECR                      | AWS Docker container registry service | Container Registry   |
| ⑳  | ECR Repository (Movie API)      | Specific repository within ECR for the API's Docker images | Container Registry   |
| ㉑  | VPC (Dev)                       | Virtual Private Cloud for the Development environment | Networking           |
| ㉒  | Public Subnet (Dev)             | Publicly accessible subnet within the Dev VPC | Networking           |
| ㉓  | Private Subnet (Dev)            | Privately accessible subnet within the Dev VPC | Networking           |
| ㉜  | Shared Services (Dev)           | Subnet for shared development services | Networking           |
| ㉞  | Amazon Workspaces               | Managed virtual desktop for developers | Development Tool     |
| ㊱  | Workspace Instance              | Individual virtual desktop provisioned for the developer | Development Tool     |
| ㊲  | Local Development               | Section representing tools on the Workspace | Local Environment    |
| ㊳  | SQLite (Local)                  | File-based database for local testing | Local Database       |
| ㊴  | Docker Engine                   | Local runtime for Docker containers | Local Runtime        |
| ㊵  | Movie API (Local Docker)        | API running in a Docker container on the Workspace | Local Runtime        |
| ㊶  | GitHub                          | Central repository for source code | Source Control       |
| ㊷  | GitHub Actions                  | CI/CD automation platform | CI/CD              |
| ㉘  | API Gateway (Dev)               | Entry point for the Development API | API Management       |
| ㉙  | ECS Fargate - Movie API (Dev)   | Stateless compute containers for the Dev API | Compute              |
| ㉚  | Amazon RDS (Dev)                | PostgreSQL database for Dev environment | Database             |
| ㉛  | Amazon Cognito (Dev Pool)       | Identity provider for the Development environment | Identity & Security  |
| ㉝  | AWS Secrets Manager (Dev)       | Secure storage for Dev environment secrets | Security             |
| ㉞  | AWS Systems Manager (SSM) (Dev) | Parameter store for Dev configuration | Management           |
| ㉟  | AWS CloudWatch (Dev Logs)       | Logging and monitoring for the Dev environment | Observability        |
endlegend

@enduml